{"ast":null,"code":"var _temp;\n\nimport React from 'react';\nimport axios from 'axios';\nconst Send = new (_temp = class send extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.update_auth = () => {\n      this.state.SessionID = sessionStorage.getItem('SessionID');\n      axios.defaults.headers.common['SessionID'] = this.state.SessionID;\n    };\n\n    this.parse_json = data => {\n      var array = [];\n      res.data.forEach(e => {\n        let x = JSON.parse(e);\n        array.push(x);\n      });\n      return array;\n    };\n\n    this.post = async (route, data, parsejson = false) => {\n      this.update_auth();\n      var url = this.state.URL + route;\n      return new Promise(function (resolve, reject) {\n        axios.post(url, data).then(res => {\n          if (!parsejson) resolve(res);else if (parsejson) {\n            var array = [];\n            res.data.forEach(e => {\n              let x = JSON.parse(e);\n              array.push(x);\n            });\n          }\n        }).catch(err => {\n          console.log(err);\n          reject(err);\n        });\n      });\n    };\n\n    this.get = async route => {\n      this.update_auth();\n      var url = this.state.URL + route;\n      return new Promise(function (resolve, reject) {\n        axios.get(url).then(res => {\n          resolve(res);\n        }).catch(err => {\n          reject(err);\n        });\n      });\n    };\n\n    this.put = async (route, data) => {\n      this.update_auth();\n      var url = this.state.URL + route;\n      return new Promise(function (resolve, reject) {\n        axios.put(url, data).then(res => {\n          resolve(res);\n        }).catch(err => {\n          console.log(err);\n          reject(err);\n        });\n      });\n    };\n\n    this.state = {\n      testURL: 'http://localhost:3888',\n      liveURL: 'fakeWebsiteForNow',\n      URL: '',\n      SessionID: ''\n    };\n\n    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n      this.state.URL = this.state.testURL;\n    } else {\n      this.state.URL = this.state.liveURL;\n    }\n  }\n\n}, _temp)();\nexport default Send;","map":{"version":3,"sources":["C:/Users/nwest/Desktop/FlaskWebAPI/FlaskWebAPI/ReactWebApp/react-webapp/src/send.js"],"names":["React","axios","Send","send","Component","constructor","props","update_auth","state","SessionID","sessionStorage","getItem","defaults","headers","common","parse_json","data","array","res","forEach","e","x","JSON","parse","push","post","route","parsejson","url","URL","Promise","resolve","reject","then","catch","err","console","log","get","put","testURL","liveURL","window","location","hostname"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Send = new class send extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      testURL: 'http://localhost:3888',\r\n      liveURL: 'fakeWebsiteForNow',\r\n      URL: '',\r\n      SessionID: '',\r\n    }\r\n    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1'){\r\n      this.state.URL = this.state.testURL;\r\n    }else{\r\n      this.state.URL = this.state.liveURL;\r\n    }\r\n  }\r\n\r\n  update_auth = () => {\r\n    this.state.SessionID = sessionStorage.getItem('SessionID');\r\n    axios.defaults.headers.common['SessionID'] = this.state.SessionID;\r\n  }\r\n\r\n  parse_json = (data) => {\r\n    var array = [];\r\n    res.data.forEach(e => {\r\n      let x = JSON.parse(e);\r\n      array.push(x);\r\n    });\r\n    return array;\r\n  }\r\n\r\n  post = async (route, data, parsejson = false) => {\r\n    this.update_auth();\r\n    var url = this.state.URL + route;\r\n    return new Promise(function(resolve, reject) {\r\n      axios.post(url, data)\r\n      .then(res => {\r\n        if (!parsejson)\r\n          resolve(res);\r\n        else if (parsejson) {\r\n          var array = [];\r\n          res.data.forEach(e => {\r\n            let x = JSON.parse(e);\r\n            array.push(x);\r\n          });\r\n    \r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        reject(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  get = async (route) => {\r\n    this.update_auth();\r\n    var url = this.state.URL + route;\r\n    return new Promise(function(resolve, reject) {\r\n      axios.get(url)\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(err => {\r\n        reject(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  put = async (route, data) => {\r\n    this.update_auth();\r\n    var url = this.state.URL + route;\r\n    return new Promise(function(resolve, reject) {\r\n      axios.put(url, data)\r\n      .then(res => {\r\n        resolve(res);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        reject(err);\r\n      });\r\n    });\r\n  }\r\n  \r\n}\r\n\r\nexport default Send;\r\n"]},"metadata":{},"sourceType":"module"}