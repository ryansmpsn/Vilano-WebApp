{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\nwest\\\\Desktop\\\\FlaskWebAPI\\\\FlaskWebAPI\\\\ReactWebApp\\\\react-webapp\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\nwest\\\\Desktop\\\\FlaskWebAPI\\\\FlaskWebAPI\\\\ReactWebApp\\\\react-webapp\\\\src\\\\load_page.js\",\n    _temp;\n\nimport React from 'react';\nimport Send from './send';\nimport { Route, Redirect } from \"react-router-dom\";\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      isAuthenticated = _ref.isAuthenticated,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"isAuthenticated\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => isAuthenticated ? React.createElement(Component, Object.assign({}, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    })) : React.createElement(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          from: props.location\n        }\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nconst Load = new (_temp = class load_page extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.first_load = async () => {\n      Send.post('/ViewContracts', '').then(res => {\n        var list = JSON.parse(JSON.stringify(res.data));\n        console.log(eval(JSON.parse(res.data))); //JSON.parse(list[0]));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.load = async () => {\n      return new Promise(function (resolve, reject) {});\n    };\n\n    this.state = {\n      testURL: 'http://localhost:3888',\n      liveURL: 'fakeWebsiteForNow',\n      URL: ''\n    };\n  }\n\n}, _temp)();\nexport default Load;","map":{"version":3,"sources":["C:/Users/nwest/Desktop/FlaskWebAPI/FlaskWebAPI/ReactWebApp/react-webapp/src/load_page.js"],"names":["React","Send","Route","Redirect","PrivateRoute","Component","component","isAuthenticated","rest","props","pathname","state","from","location","Load","load_page","constructor","first_load","post","then","res","list","JSON","parse","stringify","data","console","log","eval","catch","err","load","Promise","resolve","reject","testURL","liveURL","URL"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAaC,SAAb,QAAEC,SAAF;AAAA,MAAwBC,eAAxB,QAAwBA,eAAxB;AAAA,MAA4CC,IAA5C;;AAAA,SACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAEC,KAAK,IAC5BF,eAAe,GAEZ,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFY,GAIZ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAACC,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,KAAK,EAAE;AAACC,UAAAA,IAAI,EAAEH,KAAK,CAACI;AAAb;AAA5B,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;AAAA,CAArB;;AAUA,MAAMC,IAAI,GAAG,aAAI,MAAMC,SAAN,SAAwBf,KAAK,CAACK,SAA9B,CAAwC;AACvDW,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBQ,UAVmB,GAUN,YAAY;AACvBhB,MAAAA,IAAI,CAACiB,IAAL,CAAU,gBAAV,EAA4B,EAA5B,EACCC,IADD,CACMC,GAAG,IAAI;AACX,YAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,GAAG,CAACK,IAAnB,CAAX,CAAX;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,CAACN,IAAI,CAACC,KAAL,CAAWH,GAAG,CAACK,IAAf,CAAD,CAAhB,EAFW,CAE6B;AAEzC,OALD,EAMCI,KAND,CAMOC,GAAG,IAAI;AACZJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACD,OARD;AASD,KApBkB;;AAAA,SAsBnBC,IAtBmB,GAsBZ,YAAY;AACjB,aAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B,CAE5C,CAFM,CAAP;AAGD,KA1BkB;;AAEjB,SAAKvB,KAAL,GAAa;AACXwB,MAAAA,OAAO,EAAE,uBADE;AAEXC,MAAAA,OAAO,EAAE,mBAFE;AAGXC,MAAAA,GAAG,EAAE;AAHM,KAAb;AAMD;;AATsD,CAA5C,UAAb;AA+BA,eAAevB,IAAf","sourcesContent":["import React from 'react';\r\nimport Send from './send';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = ({component: Component, isAuthenticated, ...rest}) => (\r\n  <Route {...rest} render={props => (\r\n    isAuthenticated \r\n      ? \r\n      (<Component {...props}/>)\r\n      :\r\n      (<Redirect to={{pathname: '/login', state: {from: props.location}}}/>)\r\n  )}/>\r\n);\r\n\r\nconst Load = new class load_page extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      testURL: 'http://localhost:3888',\r\n      liveURL: 'fakeWebsiteForNow',\r\n      URL: '',\r\n    }\r\n    \r\n  }\r\n\r\n  first_load = async () => {\r\n    Send.post('/ViewContracts', '')\r\n    .then(res => {\r\n      var list = JSON.parse(JSON.stringify(res.data));\r\n      console.log(eval(JSON.parse(res.data)));//JSON.parse(list[0]));\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n    });\r\n  }\r\n\r\n  load = async () => {\r\n    return new Promise(function(resolve, reject) {\r\n      \r\n    });\r\n  }\r\n  \r\n}\r\n\r\nexport default Load;"]},"metadata":{},"sourceType":"module"}